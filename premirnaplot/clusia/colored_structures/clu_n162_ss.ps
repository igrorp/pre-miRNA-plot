%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Oct  9 14:06:19 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCACGCAUUUGAUCCUUUCUUUUCAUUGCACAAAACUUGCAGUCGGAUGCAGAUGGGGGAAGAAUUUGAUUAAUGAUAAGCCUCUUAACAGGAACGUUCUCCUUCCUCAAGGAGGCACGCAAUCUAGAUGAUUCACUCACUGCCAUUACCGUGGGAAUUGUUACAAUGACAAACUCGGUGGAACCCGUGUC\
) } def
/len { sequence length } bind def

/coor [
[82.27925873 746.24755859]
[88.32559967 730.40844727]
[88.32559967 715.40844727]
[88.32559967 700.40844727]
[88.32559967 685.40844727]
[88.32559967 670.40844727]
[77.64472961 660.09075928]
[77.43104553 644.87860107]
[88.32559967 633.74548340]
[88.32559967 618.74548340]
[88.32559967 603.74548340]
[80.58830261 591.01824951]
[88.32559967 577.21807861]
[88.32559967 562.21807861]
[88.32559967 547.21807861]
[74.87501526 542.77838135]
[63.43708801 534.38726807]
[55.13904190 522.85516357]
[50.80373764 509.30297852]
[50.86808014 495.05291748]
[55.33903503 481.49966431]
[63.79164505 469.97375488]
[75.40938568 461.61102295]
[89.06301880 457.24066162]
[89.30717468 442.24264526]
[89.55133057 427.24462891]
[89.79548645 412.24661255]
[90.03964233 397.24862671]
[90.28379059 382.25061035]
[80.94107056 367.40289307]
[90.51766968 351.68310547]
[90.51766968 336.68310547]
[90.51766968 321.68310547]
[90.51766968 306.68310547]
[79.83679199 296.36541748]
[79.62311554 281.15328979]
[90.51766968 270.02017212]
[90.51766968 255.02015686]
[90.51766968 240.02015686]
[90.51766968 225.02015686]
[90.51766968 210.02015686]
[82.78036499 197.29289246]
[90.51766968 183.49272156]
[90.51766968 168.49272156]
[87.82308960 164.53289795]
[87.59773254 158.83520508]
[90.76976776 153.00645447]
[91.25801086 138.01440430]
[91.74626160 123.02235413]
[92.23450470 108.03030396]
[92.60071564 93.03477478]
[92.84487152 78.03675842]
[93.08901978 63.03874588]
[90.09613800 54.39210510]
[93.46119690 47.79912949]
[93.94944000 32.80707550]
[94.43768311 17.81502533]
[94.92592621 2.82297301]
[87.64191437 -11.22173309]
[95.78938293 -23.69041443]
[96.27762604 -38.68246841]
[96.76587677 -53.67451859]
[86.23947144 -65.15635681]
[86.94818878 -80.35347748]
[97.95923615 -90.31803131]
[98.44747925 -105.31008148]
[98.93572998 -120.30213165]
[99.42397308 -135.29418945]
[99.79018402 -150.28971863]
[100.03433990 -165.28773499]
[100.27848816 -180.28573608]
[97.72484589 -184.87301636]
[97.24462891 -189.51560974]
[98.50933075 -193.41108704]
[100.91853333 -196.00514221]
[101.89450073 -210.97335815]
[90.66175842 -218.97665405]
[84.89968872 -231.38836670]
[86.01788330 -244.91793823]
[93.61725616 -256.03643799]
[105.62230682 -261.89688110]
[106.84178162 -276.84722900]
[108.06126404 -291.79757690]
[109.28073883 -306.74792480]
[110.50022125 -321.69827271]
[111.71969604 -336.64862061]
[112.93917847 -351.59896851]
[103.09162140 -360.80139160]
[100.38645172 -373.80645752]
[105.59282684 -385.81515503]
[116.60198975 -392.52743530]
[118.06465912 -407.45593262]
[119.52732086 -422.38446045]
[120.98998260 -437.31298828]
[122.45264435 -452.24148560]
[116.09788513 -466.73037720]
[125.03936005 -478.64251709]
[117.77466583 -493.34475708]
[127.09870911 -506.83529663]
[143.41970825 -505.23620605]
[149.94801331 -490.19250488]
[139.96788025 -477.17984009]
[146.42726135 -463.75875854]
[137.38116455 -450.77883911]
[135.91850281 -435.85031128]
[134.45584106 -420.92178345]
[132.99317932 -405.99328613]
[131.53050232 -391.06475830]
[142.75054932 -378.54598999]
[141.42613220 -361.44863892]
[127.88952637 -350.37948608]
[126.67004395 -335.42913818]
[125.45056915 -320.47879028]
[124.23108673 -305.52844238]
[123.01161194 -290.57809448]
[121.79212952 -275.62774658]
[120.57265472 -260.67739868]
[133.35774231 -250.39192200]
[137.54010010 -234.35333252]
[131.28160095 -218.82614136]
[116.86271667 -209.99739075]
[115.88674927 -195.02917480]
[115.27650452 -180.04158020]
[115.03234863 -165.04357910]
[114.78819275 -150.04556274]
[117.82741547 -143.29618835]
[114.41602325 -134.80593872]
[113.92778015 -119.81388855]
[113.43953705 -104.82183838]
[112.95129395 -89.82978821]
[123.29066467 -79.16991425]
[123.00908661 -63.95888519]
[111.75792694 -53.18627548]
[111.26968384 -38.19422150]
[110.78144073 -23.20217133]
[118.10037231 -10.22979641]
[109.91797638 3.31121731]
[109.42973328 18.30326843]
[108.94149017 33.29532242]
[108.45324707 48.28737259]
[108.08703613 63.28290176]
[107.84288025 78.28091431]
[107.59872437 93.27893066]
[110.63049316 100.76184082]
[107.22655487 108.51854706]
[106.73831177 123.51059723]
[106.25006866 138.50265503]
[105.76181793 153.49470520]
[105.51766968 168.49272156]
[105.51766968 183.49272156]
[113.25496674 197.29289246]
[105.51766968 210.02015686]
[105.51766968 225.02015686]
[105.51766968 240.02015686]
[105.51766968 255.02015686]
[105.51766968 270.02017212]
[116.41221619 281.15328979]
[116.19853973 296.36541748]
[105.51766968 306.68310547]
[105.51766968 321.68310547]
[105.51766968 336.68310547]
[105.51766968 351.68310547]
[114.07453918 361.34738159]
[113.75720215 373.85043335]
[105.28180695 382.49475098]
[105.03765106 397.49276733]
[104.79349518 412.49078369]
[104.54934692 427.48880005]
[104.30519104 442.48681641]
[104.06103516 457.48483276]
[118.96557617 463.09463501]
[131.02960205 473.44937134]
[138.80786133 487.28439331]
[141.37683105 502.91958618]
[138.44432068 518.46337891]
[130.38259888 532.04168701]
[118.18122101 542.02374268]
[103.32559967 547.21807861]
[103.32559967 562.21807861]
[103.32559967 577.21807861]
[111.06289673 591.01824951]
[103.32559967 603.74548340]
[103.32559967 618.74548340]
[103.32559967 633.74548340]
[114.22015381 644.87860107]
[114.00646973 660.09075928]
[103.32559967 670.40844727]
[103.32559967 685.40844727]
[103.32559967 700.40844727]
[103.32559967 715.40844727]
[103.32559967 730.40844727]
[109.37194061 746.24755859]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 191]
[3 190]
[4 189]
[5 188]
[6 187]
[9 184]
[10 183]
[11 182]
[13 180]
[14 179]
[15 178]
[24 170]
[25 169]
[26 168]
[27 167]
[28 166]
[29 165]
[31 162]
[32 161]
[33 160]
[34 159]
[37 156]
[38 155]
[39 154]
[40 153]
[41 152]
[43 150]
[44 149]
[47 148]
[48 147]
[49 146]
[50 145]
[51 143]
[52 142]
[53 141]
[55 140]
[56 139]
[57 138]
[58 137]
[60 135]
[61 134]
[62 133]
[65 130]
[66 129]
[67 128]
[68 127]
[69 125]
[70 124]
[71 123]
[75 122]
[76 121]
[81 117]
[82 116]
[83 115]
[84 114]
[85 113]
[86 112]
[87 111]
[91 108]
[92 107]
[93 106]
[94 105]
[95 104]
[97 102]
] def

init

% Start Annotations
153 173 10 0.5019607843137255 0.0 0.0 omark / 22 42 10 0.0 1.0 0.0 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
