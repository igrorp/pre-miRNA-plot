%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Oct  9 14:06:12 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUUUAGGAUAAUUGUCGGGAAAUCCGUUGGAUACUUGACCUCGGAUGAUGUAGGAAAUGAGCGGUGGAAACAAGGGAUAAGGGAUUUCUUUGAUUUGUCUGGAAGG\
) } def
/len { sequence length } bind def

/coor [
[76.86516571 524.29174805]
[82.91150665 508.45263672]
[82.91150665 493.45263672]
[82.91150665 478.45263672]
[82.91150665 463.45263672]
[75.17420959 450.72537231]
[82.91150665 436.92517090]
[82.91150665 421.92517090]
[82.91150665 406.92517090]
[82.91150665 391.92517090]
[82.91150665 376.92517090]
[82.91150665 361.92517090]
[80.11454773 357.87969971]
[79.93778992 352.00222778]
[83.37315369 346.05935669]
[84.24533081 331.08474731]
[85.11750031 316.11010742]
[85.98967743 301.13549805]
[86.86184692 286.16085815]
[87.51613617 271.17514038]
[87.95240784 256.18148804]
[88.38867950 241.18783569]
[88.82495117 226.19418335]
[89.26122284 211.20053101]
[89.69749451 196.20687866]
[90.13376617 181.21322632]
[82.76990509 168.26629639]
[90.90530396 154.69699097]
[91.34157562 139.70333862]
[91.77784729 124.70968628]
[80.63416290 117.41082764]
[74.55786896 105.55612946]
[75.13893127 92.24758148]
[82.22531128 80.96758270]
[93.96272278 74.66773224]
[94.83489990 59.69310760]
[95.70706940 44.71848679]
[96.57924652 29.74386406]
[86.64417267 12.32299900]
[97.59513092 -3.50133348]
[97.59513092 -18.50133324]
[97.37697601 -33.49974823]
[96.94070435 -48.49340057]
[96.50443268 -63.48705673]
[87.62151337 -72.97798157]
[87.65184784 -85.57440948]
[96.02764893 -94.43605804]
[88.29034424 -108.23622894]
[96.02764893 -120.96350098]
[96.02764893 -135.96350098]
[83.93306732 -145.87586975]
[81.09044647 -161.25291443]
[88.84198761 -174.83407593]
[103.52764893 -180.20672607]
[118.21331024 -174.83407593]
[125.96485138 -161.25291443]
[123.12223053 -145.87586975]
[111.02764893 -135.96350098]
[111.02764893 -120.96350098]
[118.76494598 -108.23622894]
[111.02764893 -94.43605804]
[120.63291931 -79.82872772]
[111.49808502 -63.92332458]
[111.93435669 -48.92967224]
[112.37062836 -33.93601608]
[115.76351929 -27.23816299]
[112.59513092 -18.50133324]
[112.59513092 -3.50133348]
[120.56928253 3.18670321]
[123.52632904 13.39616013]
[120.22644806 23.73281479]
[111.55386353 30.61603546]
[110.68169403 45.59065628]
[109.80952454 60.56528091]
[108.93734741 75.53990173]
[121.66194916 85.54550171]
[126.01696014 101.13592529]
[120.31972504 116.28746033]
[106.77149963 125.14595795]
[106.33522797 140.13961792]
[105.89895630 155.13327026]
[113.23161316 169.15263367]
[105.12741852 181.64949036]
[104.69114685 196.64314270]
[104.25487518 211.63679504]
[103.81860352 226.63044739]
[103.38233185 241.62411499]
[102.94606018 256.61776733]
[102.50978851 271.61141968]
[105.42272949 280.43670654]
[101.83647156 287.03305054]
[100.96429443 302.00765991]
[100.09212494 316.98229980]
[99.21995544 331.95690918]
[98.34777832 346.93151855]
[97.91150665 361.92517090]
[97.91150665 376.92517090]
[97.91150665 391.92517090]
[97.91150665 406.92517090]
[97.91150665 421.92517090]
[97.91150665 436.92517090]
[105.64881134 450.72537231]
[97.91150665 463.45263672]
[97.91150665 478.45263672]
[97.91150665 493.45263672]
[97.91150665 508.45263672]
[103.95784760 524.29174805]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 106]
[3 105]
[4 104]
[5 103]
[7 101]
[8 100]
[9 99]
[10 98]
[11 97]
[12 96]
[15 95]
[16 94]
[17 93]
[18 92]
[19 91]
[20 89]
[21 88]
[22 87]
[23 86]
[24 85]
[25 84]
[26 83]
[28 81]
[29 80]
[30 79]
[35 75]
[36 74]
[37 73]
[38 72]
[40 68]
[41 67]
[42 65]
[43 64]
[44 63]
[47 61]
[49 59]
[50 58]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
