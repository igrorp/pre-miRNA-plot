%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Oct  9 14:06:12 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUUGACGACCCAGACGAUGUCGUUUCAGAGGAAGAUGAGCAUAUUACACUCAUUUCCCCUCUCUCUCUCUCUUUUUUUUAUUUUUAUUUUCUGGGUUGUUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[86.45365906 334.57006836]
[92.50000000 318.73095703]
[92.50000000 303.73095703]
[92.50000000 288.73095703]
[84.76270294 276.00366211]
[92.50000000 262.20349121]
[92.50000000 247.20350647]
[92.50000000 232.20350647]
[92.50000000 217.20350647]
[92.50000000 202.20350647]
[92.50000000 187.20350647]
[92.50000000 172.20350647]
[92.50000000 157.20350647]
[92.50000000 142.20350647]
[92.50000000 127.20349884]
[92.50000000 112.20349884]
[85.67605591 100.00000000]
[92.50000000 87.79650116]
[92.50000000 72.79650116]
[92.50000000 57.79650116]
[92.50000000 42.79650116]
[71.73640442 37.13961411]
[53.71366119 25.40796852]
[40.15618896 8.73553562]
[32.35765839 -11.27153206]
[31.05755043 -32.68962479]
[36.37102890 -53.46262741]
[47.77883148 -71.59930420]
[64.17798615 -85.36415863]
[57.83871078 -98.95877838]
[51.49943542 -112.55339813]
[45.16016388 -126.14801025]
[38.82088852 -139.74263000]
[23.51937485 -149.85650635]
[25.54719925 -167.22093201]
[18.81521034 -180.62542725]
[12.08322334 -194.02990723]
[5.35123587 -207.43440247]
[-1.38075197 -220.83889771]
[-8.11273956 -234.24337769]
[-14.84472752 -247.64787292]
[-30.19638062 -249.17440796]
[-42.27149582 -258.77624512]
[-47.21694565 -273.38946533]
[-43.45465851 -288.35104370]
[-32.18516541 -298.88677979]
[-17.00451851 -301.63479614]
[-2.75681067 -295.71817017]
[6.01156950 -283.02490234]
[6.50266218 -267.60534668]
[-1.44023776 -254.37986755]
[5.29174995 -240.97537231]
[12.02373791 -227.57087708]
[18.75572586 -214.16639709]
[25.48771286 -200.76190186]
[32.21969986 -187.35740662]
[38.95168686 -173.95292664]
[50.41367340 -169.79290771]
[56.09405136 -158.54995728]
[52.41550446 -146.08190918]
[58.75477982 -132.48728943]
[65.09405518 -118.89266968]
[71.43332672 -105.29804993]
[77.77259827 -91.70343781]
[87.53125763 -94.26017761]
[97.56075287 -95.36896515]
[107.64738464 -95.00543976]
[117.57611084 -93.17658234]
[127.13514709 -89.92063904]
[136.12048340 -85.30632019]
[144.34025574 -79.43130493]
[151.61880493 -72.42021942]
[157.80044556 -64.42198181]
[162.75283813 -55.60662079]
[166.36973572 -46.16168594]
[168.57334900 -36.28823471]
[169.31597900 -26.19657707]
[168.58102417 -16.10177231]
[166.38343811 -6.21906233]
[162.76930237 3.24072599]
[157.81497192 12.07567596]
[151.62539673 20.09709167]
[144.33192444 27.13352394]
[136.08949280 33.03444290]
[127.07337952 37.67345428]
[117.47543335 40.95099640]
[107.50000000 42.79650116]
[107.50000000 57.79650116]
[107.50000000 72.79650116]
[107.50000000 87.79650116]
[114.32394409 100.00000000]
[107.50000000 112.20349884]
[107.50000000 127.20349884]
[107.50000000 142.20350647]
[107.50000000 157.20350647]
[107.50000000 172.20350647]
[107.50000000 187.20350647]
[107.50000000 202.20350647]
[107.50000000 217.20350647]
[107.50000000 232.20350647]
[107.50000000 247.20350647]
[107.50000000 262.20349121]
[115.23729706 276.00366211]
[107.50000000 288.73095703]
[107.50000000 303.73095703]
[107.50000000 318.73095703]
[113.54634094 334.57006836]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 106]
[3 105]
[4 104]
[6 102]
[7 101]
[8 100]
[9 99]
[10 98]
[11 97]
[12 96]
[13 95]
[14 94]
[15 93]
[16 92]
[18 90]
[19 89]
[20 88]
[21 87]
[29 64]
[30 63]
[31 62]
[32 61]
[33 60]
[35 57]
[36 56]
[37 55]
[38 54]
[39 53]
[40 52]
[41 51]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
