%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Oct  9 14:06:18 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUAUGAAGUUUGAUGCAGAUAAUAUGGCUCAAGGAUUGGCUUCCAGGUUUUCAUCUGGAAAUUUUCAAAGAAACUUCCUUUAGUGCAUGCAUGAGUUCUUGUACUGAGUGUGAGUUUUCUUUCCCUGAAGCUUUUCAAUUCGUGGGAGCACACAUUCUAAUGAACCUAUAGCUUGUAUUGCUUGCAUGUA\
) } def
/len { sequence length } bind def

/coor [
[85.71221161 726.95410156]
[91.75855255 711.11492920]
[91.75855255 696.11492920]
[91.75855255 681.11492920]
[91.75855255 666.11492920]
[91.75855255 651.11492920]
[91.63583374 636.11547852]
[91.39040375 621.11743164]
[91.14498138 606.11944580]
[90.89955902 591.12145996]
[88.13986969 587.20568848]
[87.82160950 581.51129150]
[90.89955902 575.63061523]
[91.14498138 560.63262939]
[91.39040375 545.63464355]
[91.63583374 530.63665771]
[91.88125610 515.63867188]
[92.12668610 500.64065552]
[92.37210846 485.64266968]
[80.37587738 476.85470581]
[75.80052185 462.51837158]
[80.60034943 448.06796265]
[93.13355255 439.11111450]
[93.37897491 424.11312866]
[93.62440491 409.11511230]
[90.58544922 402.36486816]
[93.99854279 393.87429810]
[94.48932648 378.88232422]
[87.17259979 365.90869141]
[95.35728455 352.36907959]
[95.84806824 337.37710571]
[96.33885956 322.38513184]
[96.58428192 307.38714600]
[96.58428192 292.38714600]
[96.58428192 277.38714600]
[96.58428192 262.38714600]
[96.58428192 247.38714600]
[96.46156311 232.38764954]
[96.21614075 217.38964844]
[95.84802246 202.39416504]
[95.35723114 187.40220642]
[94.86644745 172.41023254]
[94.37566376 157.41825867]
[93.88487244 142.42630005]
[93.39408875 127.43432617]
[92.90330505 112.44235992]
[85.68372345 100.46866608]
[92.10472870 88.04843140]
[80.85174561 77.27772522]
[80.56758118 62.06674194]
[90.90515137 51.40511703]
[78.84700775 60.32707214]
[64.31105804 56.62488937]
[57.98983765 43.02186966]
[64.53318787 29.52429390]
[79.12786865 26.06087685]
[91.03790283 35.17881775]
[91.77391815 20.19688606]
[92.50993347 5.21495485]
[93.24594879 -9.76697731]
[93.98196411 -24.74890900]
[94.71797943 -39.73083878]
[87.66714478 -53.89404297]
[96.01962280 -66.22633362]
[96.75563812 -81.20825958]
[97.49165344 -96.19019318]
[98.22766876 -111.17212677]
[98.96368408 -126.15406036]
[99.20910645 -141.15205383]
[98.96368408 -156.15003967]
[98.71825409 -171.14804077]
[98.47283173 -186.14602661]
[98.22740173 -201.14401245]
[97.98197937 -216.14201355]
[97.61386108 -231.13749695]
[97.12306976 -246.12945557]
[96.63228607 -261.12142944]
[88.44760132 -274.66107178]
[95.76433563 -287.63467407]
[95.15090942 -302.62213135]
[94.41489410 -317.60406494]
[93.67887878 -332.58599854]
[92.94286346 -347.56793213]
[92.20684814 -362.54986572]
[91.47083282 -377.53176880]
[90.73481750 -392.51370239]
[89.99880219 -407.49563599]
[89.26278687 -422.47756958]
[77.57848358 -438.89144897]
[87.11257172 -455.70300293]
[85.88675690 -470.65283203]
[76.11416626 -483.82205200]
[82.88014984 -498.76037598]
[99.22444916 -500.10055542]
[108.33344269 -486.46389771]
[100.83658600 -471.87866211]
[102.06240082 -456.92883301]
[110.43165588 -451.03216553]
[114.24562836 -441.29476929]
[112.01614380 -430.85263062]
[104.24472046 -423.21359253]
[104.98073578 -408.23165894]
[105.71675110 -393.24972534]
[106.45276642 -378.26779175]
[107.18878174 -363.28585815]
[107.92479706 -348.30392456]
[108.66081238 -333.32199097]
[109.39682770 -318.34005737]
[110.13284302 -303.35815430]
[113.60677338 -296.82107544]
[110.75630188 -288.12545776]
[118.90588379 -275.65817261]
[111.62425232 -261.61221313]
[112.11504364 -246.62025452]
[112.60582733 -231.62828064]
[115.97233582 -225.03526306]
[112.97996521 -216.38743591]
[113.22539520 -201.38945007]
[113.47081757 -186.39144897]
[113.71624756 -171.39346313]
[113.96166992 -156.39546204]
[114.20709991 -141.39747620]
[116.14241791 -139.34843445]
[117.37594604 -136.40322876]
[117.55996704 -132.82775879]
[116.45027924 -129.00956726]
[113.94561005 -125.41804504]
[113.20959473 -110.43611145]
[112.47357941 -95.45417786]
[111.73756409 -80.47225189]
[111.00154877 -65.49031830]
[118.10503387 -52.39872360]
[109.69991302 -38.99482727]
[108.96389771 -24.01289368]
[108.22788239 -9.03096199]
[107.49186707 5.95097017]
[106.75585175 20.93290138]
[106.01983643 35.91483307]
[105.89711761 50.91433334]
[116.90985870 60.87702179]
[117.62115479 76.07402039]
[107.09669495 87.55764008]
[114.31627655 99.53133392]
[107.89527130 111.95156860]
[108.38605499 126.94354248]
[108.87684631 141.93551636]
[109.36763000 156.92747498]
[109.85841370 171.91944885]
[110.34920502 186.91142273]
[110.83998871 201.90338135]
[114.25308228 210.39396667]
[111.21413422 217.14422607]
[111.45955658 232.14222717]
[114.73326874 240.68750000]
[111.58428192 247.38714600]
[111.58428192 262.38714600]
[111.58428192 277.38714600]
[111.58428192 292.38714600]
[111.58428192 307.38714600]
[114.56559753 313.31738281]
[114.15420532 319.00582886]
[111.33082581 322.87591553]
[110.84004211 337.86788940]
[110.34925079 352.85986328]
[117.63088226 366.90579224]
[109.48130035 379.37310791]
[108.99050903 394.36508179]
[108.62239075 409.36056519]
[108.37696838 424.35855103]
[108.13153839 439.35653687]
[120.36497498 448.71865845]
[124.68943024 463.31838989]
[119.64745331 477.49734497]
[107.37010193 485.88809204]
[107.12467957 500.88607788]
[106.87924957 515.88409424]
[106.63382721 530.88208008]
[106.38839722 545.88006592]
[106.14297485 560.87805176]
[105.89754486 575.87603760]
[105.89754486 590.87603760]
[106.14297485 605.87402344]
[106.38839722 620.87200928]
[106.63382721 635.86999512]
[109.90753937 644.41528320]
[106.75855255 651.11492920]
[106.75855255 666.11492920]
[106.75855255 681.11492920]
[106.75855255 696.11492920]
[106.75855255 711.11492920]
[112.80489349 726.95410156]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 190]
[3 189]
[4 188]
[5 187]
[6 186]
[7 184]
[8 183]
[9 182]
[10 181]
[13 180]
[14 179]
[15 178]
[16 177]
[17 176]
[18 175]
[19 174]
[23 170]
[24 169]
[25 168]
[27 167]
[28 166]
[30 164]
[31 163]
[32 162]
[33 159]
[34 158]
[35 157]
[36 156]
[37 155]
[38 153]
[39 152]
[40 150]
[41 149]
[42 148]
[43 147]
[44 146]
[45 145]
[46 144]
[48 142]
[51 139]
[57 138]
[58 137]
[59 136]
[60 135]
[61 134]
[62 133]
[64 131]
[65 130]
[66 129]
[67 128]
[68 127]
[69 122]
[70 121]
[71 120]
[72 119]
[73 118]
[74 117]
[75 115]
[76 114]
[77 113]
[79 111]
[80 109]
[81 108]
[82 107]
[83 106]
[84 105]
[85 104]
[86 103]
[87 102]
[88 101]
[90 97]
[91 96]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
